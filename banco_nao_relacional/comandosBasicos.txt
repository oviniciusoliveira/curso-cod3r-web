help
db.help()
show dbs
use <db-name>
db.createCollection('<collection-name>')
show collections
db.<collection-name>.drop()
db.<collection-name>.insert()
db.<collection-name>.save()

(atributo)   _id: ObjectId()

db.<collection-name>.find({}, {})
db.<collection-name>.find({$or: [{}]})
db.<collection-name>.find({$and: [{}]})
db.<collection-name>.find({<atributo>: {$exists: true}})
db.<collection-name>.findOne({})    
    .pretty()
    .skip(n)
    .limit(n)
db.<collection-name>.count()
db.<collection-name>.find({<filtro>}, {<output>})   ex: {_id: 0, nome: 1, "cidades.nome": 1}

exemplos:
    db.estados.find({populacao: {$exists: true}}, {_id: 0, nome: 1})   



db.<collection-name>.aggregate([
    { $project: {<output>} }       ex: {$project: {nome: 1, "cidades.nome": 1, _id:}}
])

    ex2:
        db.<collection-name>.aggregate([
            { $project: {populacao: {$sum: "$cidades.populacao"}, sigla: 1, _id: 0}},
            { $group: {_id: null, populacaoTotal: {$sum: "$populacao"}}},
            { $project: {_id: 0, populacaoTotal: 1}},
        ])

    ex3:
        db.estados.aggregate([
            { $match: {"cidades.nome": "Sorocaba"}},
            { $unwind: "$cidades" },
            { $match: "cidades.nome": "Sorocaba"},
            { $project: {_id: "$cidades._id"}}
        ]).pretty()

exemplos update:
     db.estados.update({sigla: "SP"}, {$set: {populacao: 45340000}})    

     db.estados.update({sigla: "SP"}, {$push: {cidades: {nome: "Santos", populacao: 4333966}}})

     ** ao setar um atributo existente, substituirá todos os documentos que possui este atributo **

exemplos remove()
    db.estados.remove({ sigla: "AC"})

    <segundo parametro: limite de documentos a serem removidos>
    db.estados.remove({ populacao: {$exists: true}}, 1)

    db.estados.remove({populacao: {$lt: 20000000}}) 

exemplos lookup
    db.empresas.aggregate([
        {$match: {nome: "Bradesco"}},
        {$lookup: {
            from: "estados",
            localField: "estadoId",
            foreignField: "_id",
            as: "estado"
        }},
        {$unwind: "$estado"},
    ]).pretty()

    

    db.empresas.aggregate([
        {$match: {nome: "Vale"}},
        {$lookup: {
            from: "estados",
            localField: "cidadeId",
            foreignField: "cidades._id",
            as: "estado"
        }},
        {$unwind: "$estado"},
        {$unwind: "$estado.cidades"},
        {$addFields: { mesmaCidade: {$cmp: ["$estado.cidades._id", "$cidadeId"]}}},
        {$match: {mesmaCidade: 0}},
    ]).pretty()

        ** não funciona no caso acima** 
        {$match: {"estado.cidades._id": "$cidadeId"}},